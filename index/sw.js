const CACHE_NAME="cache_70eea13e0ab93772fdaa",CACHED_URLS=["/","/favicon.svg","/index.html","/script.js","/style.css"];async function handleFetch(e){const t=await caches.open(CACHE_NAME),a=await t.match(e);if(a)return a;try{return await fetch(e)}catch(e){return new Response("Offline and resource not cached",{status:503,statusText:"Service Unavailable"})}}async function updateCache(e){if("GET"===e.method)try{const t=await fetch(e),a=await caches.open(CACHE_NAME);await a.put(e,t.clone())}catch(e){}}self.addEventListener("install",e=>{e.waitUntil(caches.open(CACHE_NAME).then(e=>e.addAll(CACHED_URLS)))}),self.addEventListener("activate",e=>{e.waitUntil(caches.keys().then(e=>Promise.all(e.filter(e=>e!==CACHE_NAME).map(e=>caches.delete(e)))))}),self.addEventListener("fetch",e=>{const{request:t}=e;t.url.startsWith(self.location.origin)&&("only-if-cached"===t.cache&&"same-origin"!==t.mode||(e.respondWith(handleFetch(t)),e.waitUntil(updateCache(t))))});